version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.0.0

references:
  commands:
    deploy:
      staging_s3_deploy: &staging_deploy
        run:
          name: Deploy to S3 Staging
          command: aws s3 sync ./build/ s3://react-rails-client-staging/ --delete --exact-timestamps
      production_s3_deploy: &production_s3_deploy
        run:
          name: Deploy to S3 Production
          command: aws s3 sync ./build/ s3://react-rails-client-prod/ --delete --exact-timestamps

    clear_cache:
      staging_clear_cache: &staging_clear_cache
        run:
          name: Clear CloudFront cache Staging
          command: aws cloudfront create-invalidation --distribution-id xxxxxxxx --paths '/*'
      production_clear_cache: &production_clear_cache
        run:
          name: Clear CloudFront cache Production
          command: aws cloudfront create-invalidation --distribution-id E2LCPBNV924HQ3 --paths '/*'


    persist_to_workspace: &persist_to_workspace
      persist_to_workspace:
        root: ~/client
        paths:
          - build/*
    attach_workspace: &attach_workspace
      attach_workspace:
        at: .

  filters:
    staging_branch_filter: &staging_branch_filter
      filters:
        branches:
          only:
            - staging
    master_branch_filter: &master_branch_filter
      filters:
        branches:
          only:
            - master

executors:
  default:
    docker:
      - image: circleci/node:14.0.0-browsers
    working_directory: ~/client
  deploy:
    environment:
      AWS_PAGER: "" # これがないとCloudFrontキャッシュ削除時にlessがないと言われる
    docker:
      - image: circleci/python:3.6.5

commands:
  yarn_install:
    steps:
      - restore_cache:
          name: Restore yarn cache
          keys:
            - v1-npm-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run:
          name: yarn install
          command: yarn install
      - save_cache:
          name: Save yarn cache
          key: v1-npm-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
  yarn_staging_build:
    steps:
      - run: yarn build:staging
  yarn_production_build:
    steps:
      - run: yarn build:production

jobs:
  staging_build:
    executor: default
    steps:
      - checkout
      - yarn_install
      - yarn_staging_build
      - *persist_to_workspace
  production_build:
    executor: default
    steps:
      - checkout
      - yarn_install
      - yarn_production_build
      - *persist_to_workspace

  staging_deploy:
    executor: deploy
    steps:
      - *attach_workspace
      - aws-cli/setup
      - *staging_s3_deploy
      - *staging_clear_cache
  production_deploy:
    executor: deploy
    steps:
      - *attach_workspace
      - aws-cli/setup
      - *production_s3_deploy
      - *production_clear_cache

workflows:
  deploy:
    jobs:
      # stagingブランチ
      - staging_build:
          <<: *staging_branch_filter
      - staging_deploy:
          requires:
            - staging_build
          <<: *staging_branch_filter

      # masterブランチ
      - production_build:
          <<: *master_branch_filter
      - production_deploy:
          requires:
            - production_build
          <<: *master_branch_filter
